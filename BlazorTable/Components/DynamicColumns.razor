@namespace BlazorTable
@using System.Reflection
@typeparam TableItem

@foreach (var propertyInfo in Type == null ? typeof(TableItem).GetProperties() : Type.GetProperties())
{
	if (propertyInfo.PropertyType.MemberType == MemberTypes.NestedType)
	{
		<DynamicColumns TableItem="TableItem" Type="@propertyInfo.PropertyType" Sortable="Sortable" Filterable="Sortable"/>
	}
	else
	{
		var member = GenerateMemberExpression<TableItem, object>(propertyInfo);

		<Column TableItem="TableItem" Title="@propertyInfo.Name" Type="propertyInfo.PropertyType.GetNonNullableType()" Field="member" Sortable="Sortable" Filterable="Filterable" CssClass="Class">
			<Template>
				@RenderProperty(context, propertyInfo, member.Compile())
			</Template>
		</Column>
	}
}